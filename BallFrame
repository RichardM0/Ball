
import java.awt.event.*;
import java.awt.Color;
import java.awt.BorderLayout;
import javax.swing.JPanel;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JRadioButtonMenuItem;
import javax.swing.JButton;
import javax.swing.ButtonGroup;

public class BallFrame extends JFrame implements ActionListener, ItemListener
{
   // execute application
   public static JFrame frame;
   private static JMenuBar menuBar;
   private static JMenu speedMenu, colorMenu, pathMenu;
   private static JRadioButtonMenuItem low, medium, high, blue, red, yellow, linear, circular, parabolic, sine;
   private static JPanel subPanel; 
   private static JButton start, stop, addBalls;
   private static ButtonGroup speedGroup, colorGroup, pathGroup;
   private static BallPanel bp;
   public BallFrame()
   {
        // create frame for balls
        frame = new JFrame( "Bouncing Ball" );
        frame.setDefaultCloseOperation( JFrame.EXIT_ON_CLOSE );
        
        // create a new ball panel at (x,y) coordinate (25,50)
        bp = new BallPanel(25, 50); 
        
        // create the menu bar
        menuBar = new JMenuBar();
        // add a dropdown for the menus
        speedMenu = new JMenu("Speed");  
        colorMenu = new JMenu("Color");
        pathMenu = new JMenu("Path");
        // create a group for the menu buttons
        speedGroup = new ButtonGroup();
        colorGroup = new ButtonGroup();
        pathGroup = new ButtonGroup();
        // separate the menu selections
        speedMenu.addSeparator();
        colorMenu.addSeparator();
        pathMenu.addSeparator();
        
        // create the selections under speed menu
        low = new JRadioButtonMenuItem("Low Speed");
        medium = new JRadioButtonMenuItem("Medium Speed");
        high = new JRadioButtonMenuItem("High Speed");

        // create the selections under color menu
        blue = new JRadioButtonMenuItem("blue");
        red = new JRadioButtonMenuItem("red");
        yellow = new JRadioButtonMenuItem("yellow");

        // create the selections under color menu
        linear = new JRadioButtonMenuItem("linear");
        circular = new JRadioButtonMenuItem("circular");
        parabolic = new JRadioButtonMenuItem("parabolic");
        sine = new JRadioButtonMenuItem("sinusoidal");
        
        // add listeners to check if it is selected
        low.addItemListener(this);
        medium.addItemListener(this);
        high.addItemListener(this);
        blue.addItemListener(this);
        red.addItemListener(this);
        yellow.addItemListener(this);
        linear.addItemListener(this);
        circular.addItemListener(this);
        parabolic.addItemListener(this);
        sine.addItemListener(this);
        
        // add these radio buttons to their respective group
        speedGroup.add(low);
        speedGroup.add(medium);
        speedGroup.add(high);
        colorGroup.add(blue);
        colorGroup.add(red);
        colorGroup.add(yellow);
        pathGroup.add(linear);
        pathGroup.add(circular);
        pathGroup.add(parabolic);
        pathGroup.add(sine);
        
        // add these radio buttons to the menu
        speedMenu.add(low);
        speedMenu.add(medium);
        speedMenu.add(high);
        colorMenu.add(blue);
        colorMenu.add(red);
        colorMenu.add(yellow);
        pathMenu.add(linear);
        pathMenu.add(circular);
        pathMenu.add(parabolic);
        pathMenu.add(sine);

        // add each menu to the menu bar
        menuBar.add(speedMenu);
        menuBar.add(colorMenu);
        menuBar.add(pathMenu);
        
        // create subpanel for buttons
        subPanel = new JPanel();
        subPanel.setBackground(Color.gray);
        
        // start, stop, and add balls button
        start = new JButton("Start");
        stop = new JButton("Stop");
        addBalls = new JButton("Add Balls");
        
        // add event listeners to check if the button is pressed
        stop.addActionListener(this);
        start.addActionListener(this);
        addBalls.addActionListener(this);
        
        // add buttons to the subpanel
        subPanel.add(start);
        subPanel.add(stop);
        subPanel.add(addBalls);
        
        // set the menubar visible
        frame.setJMenuBar(menuBar);
        // add button panel to the bottom of the frame
        frame.getContentPane().add(subPanel, BorderLayout.SOUTH);
        // add ball panel and set frame boundaries
        frame.add( bp );
        frame.setSize( 600, 600 ); // set frame size
        frame.setVisible( true ); // display frame
   }
   public static void main( String args[] )
   {
        BallFrame run = new BallFrame();
   } // end main
   public void actionPerformed(ActionEvent e) {
        if (e.getSource() == stop){
            bp.setStopped();
        }
        else if (e.getSource() == start){
            bp.setStart();
        }
        else if(e.getSource() == addBalls){
            bp.addBall();
        }
   }
   public void itemStateChanged(ItemEvent e){
        if (e.getSource() == low){
            bp.setSpeed(3.0, 2048);
        }
        else if (e.getSource() == medium){
            bp.setSpeed(6.0, 1024);
        }
        else if (e.getSource() == high){
            bp.setSpeed(9.0, 512);
        }
        else if (e.getSource() == blue){
            bp.setColor(Color.blue);
        }
        else if (e.getSource() == red){
            bp.setColor(Color.red);
        }
        else if (e.getSource() == yellow){
            bp.setColor(Color.yellow);
        }
        else if (e.getSource() == linear){
            bp.setMovement("linear");
        }
        else if (e.getSource() == circular){
            bp.setMovement("circular");
        }
        else if (e.getSource() == parabolic){
            bp.setMovement("parabolic");
        }
        else if (e.getSource() == sine){
            bp.setMovement("sine");
        }
   }
}
